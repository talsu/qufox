#!/usr/bin/env node
var util = require('util');
var debug = require('debug')('qufox');
var QufoxServer = require('../qufox-server').QufoxServer;

var command = require('optimist')
	.usage('Usage : $0 --port [num] --redisurl [url] --websocket [boolean]')
	.alias('p', 'port')
	.alias('r', 'redisurl')
	.alias('w', 'websocket')
	.alias('n', 'name')
	.alias('c', 'configfile')
	.check(function (argv){
		if (argv.p && isNaN(argv.p)){
			throw 'port must be Number.';
		}
	});

var config = require(command.argv.c || '../config');

config.servicePort = process.env.PORT || command.argv.p || Number(config.servicePort) || 3000;
config.redisUrl = process.env.REDIS_URL || command.argv.r || config.redisUrl || false;
config.websocket = process.env.USE_WEBSOCKET || command.argv.w || config.websocket || true;
config.name = process.env.INSTANCE_NAME || command.argv.n || config.name || new Date().getTime();

util.log('Qufox server starting .. See Details with \'DEBUG=qufox*\' enviroment argument.');
debug('Qufox server starting with options ' + util.inspect(config));

var transports = config.websocket ? ['websocket', 'polling'] : ['polling'];

new QufoxServer({
	listenTarget: config.servicePort,
	socketOption: {transports:transports},
	redisUrl: config.redisUrl,
	redisSentinel: config.redisSentinel,
	instanceName: config.name
});
